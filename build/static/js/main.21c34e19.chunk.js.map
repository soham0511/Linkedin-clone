{"version":3,"sources":["redux/userSlice.js","components/HeaderOption.js","firebase.js","components/Header.js","components/Sidebar.js","components/InputOption.js","components/Post.js","components/Feed.js","components/Login.js","components/Widgets.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","photoURL","catch","err","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21c34e19.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// This is called a Selector.\nexport const selectUser = state => state.user.user;\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../redux/userSlice'\nimport '../styles/HeaderOption.css'\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n    const user = useSelector(selectUser)\n    return (\n        <div onClick={onClick} className=\"headerOption\">\n            { Icon && <Icon className=\"headerOption__icon\" />}\n            {avatar && (\n                <Avatar src={user?.photoUrl} className=\"headerOption__icon\">\n                    {user?.email[0]}\n                </Avatar>\n            )}\n            <h3 className=\"headerOption__title\">{ title }</h3>\n        </div>\n    )\n}\n\nexport default HeaderOption\n","import firebase from 'firebase'\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAuPqFDw_lnNu43hDz9z1E5eBacTkZRbiI\",\n    authDomain: \"linkedin-clone-15974.firebaseapp.com\",\n    projectId: \"linkedin-clone-15974\",\n    storageBucket: \"linkedin-clone-15974.appspot.com\",\n    messagingSenderId: \"699369230611\",\n    appId: \"1:699369230611:web:a9926b4acd7b1edb470ae6\",\n    measurementId: \"G-WW24FHYWM9\"\n  };\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\n\nexport { db, auth }","import React from 'react'\nimport '../styles/Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HeaderOption from './HeaderOption';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, selectUser } from '../redux/userSlice';\nimport { auth } from '../firebase';\n\nfunction Header() {\n    const user = useSelector(selectUser)\n    const dispatch = useDispatch();\n\n    const logoutOfApp = () => {\n        dispatch(logout())\n        auth.signOut()\n    }\n\n    return (\n        <div className='header'>\n            <div className=\"header__left\">\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\"/>\n\n                <div className=\"header__search\">\n                    <SearchIcon />\n                    <input placeholder=\"Search\" type=\"text\"/>\n                </div>\n            </div>\n            \n            <div className=\"header__right\">\n                <HeaderOption Icon={HomeIcon} title=\"Home\"/>\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\"/>\n                <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\"/>\n                <HeaderOption Icon={ChatIcon} title=\"Messaging\"/>\n                <HeaderOption Icon={NotificationsIcon} title=\"Notifications\"/>\n                <HeaderOption avatar={true} title=\"me\" onClick={logoutOfApp}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../redux/userSlice';\nimport '../styles/Sidebar.css'\n\nfunction Sidebar() {\n    const user = useSelector(selectUser)\n\n    const recentItem = (topic) => (\n        <div className=\"sidebar__recentItem\">\n            <span className=\"sidebar__hash\">#</span>\n            <p>{ topic }</p>\n        </div>\n    );\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__top\">\n                <img src=\"https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2018/05/Gradient-Overview-Blog-Image-2.jpg?w=1024&h=500\" alt=\"\"/>\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\">\n                    {/* Might as well give them a default avatar\n                    whic is the first letter of their name if they\n                    don't specify a photo url */}\n                    {user.email[0]}\n                </Avatar>\n                <h2>{user.displayName}</h2>\n                <h4>{user.email}</h4>\n            </div>\n            \n            <div className=\"sidebar__stats\">\n                <div className=\"sidebar__stat\">\n                    <p>Who viewed you</p>\n                    <p className=\"sidebar__statNumber\">3,456</p>\n                </div>\n                <div className=\"sidebar__stat\">\n                    <p>Views on post</p>\n                    <p className=\"sidebar__statNumber\">1,211</p>\n                </div>\n            </div>\n\n            <div className=\"sidebar__bottom\">\n                <p>Recent</p>\n                { recentItem(\"ReactJS\") }\n                { recentItem(\"NodeJS\") }\n                { recentItem(\"Angular\") }\n                { recentItem(\"MongoDB\") }\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport '../styles/InputOption.css'\n\nfunction InputOption({Icon, title, color}) {\n    return (\n        <div className=\"inputOption\">\n            <Icon style={{ color: color}}/>\n            <h4>{ title }</h4>\n        </div>\n    )\n}\n\nexport default InputOption\n","import { Avatar } from '@material-ui/core'\nimport { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@material-ui/icons'\nimport React, { forwardRef } from 'react'\nimport InputOption from './InputOption'\nimport '../styles/Post.css'\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n    return (\n        <div ref={ref} className=\"post\">\n            <div className=\"post__header\">\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\n                <div className=\"post__info\">\n                    <h2>{ name }</h2>\n                    <p>{ description }</p>\n                </div>\n            </div>\n            <div className=\"post__body\">\n                <p>{ message }</p>\n            </div>\n\n            <div className=\"post__buttons\">\n                <InputOption Icon={ThumbUpAltOutlined} title=\"Like\" color=\"gray\"/>\n                <InputOption Icon={ChatOutlined} title=\"Comment\" color=\"gray\"/>\n                <InputOption Icon={ShareOutlined} title=\"Share\" color=\"gray\"/>\n                <InputOption Icon={SendOutlined} title=\"Send\" color=\"gray\"/>\n            </div>\n        </div>\n    )\n})\n\nexport default Post\n","import React, { useEffect, useState } from 'react'\nimport '../styles/Feed.css'\nimport CreateIcon from \"@material-ui/icons/Create\"\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\"\nimport EventNoteIcon from \"@material-ui/icons/EventNote\"\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\"\nimport InputOption from './InputOption'\nimport Post from './Post'\nimport { db } from '../firebase'\nimport firebase from \"firebase\"\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../redux/userSlice'\nimport FlipMove from \"react-flip-move\"\n\nfunction Feed() {\n    const user = useSelector(selectUser)\n    const [input, setInput] = useState(\"\")\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        db.collection(\"posts\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot(snapshot => (\n            setPosts(snapshot.docs.map((doc) => (\n                {\n                    id: doc.id,\n                    data: doc.data()\n                }\n            )))\n        ))      \n    }, [])\n\n    const sendPost = (e) => {\n        e.preventDefault()\n\n        db.collection(\"posts\").add({\n            name: user.displayName,\n            description: user.email,\n            message: input,\n            photoUrl: user.photoUrl || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput(\"\")\n    }\n\n    return (\n        <div className=\"feed\">\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\">\n                    <CreateIcon/>\n                    <form>\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\n                        <button type='submit' onClick={sendPost}>Send</button>\n                    </form>\n                </div>\n                <div className=\"feed__inputOptions\">\n                    <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\"/>\n                    <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#E7A33E\"/>\n                    <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\"/>\n                    <InputOption Icon={CalendarViewDayIcon} title=\"Write Article\" color=\"#7FC15E\"/>\n                </div>\n            </div>\n            <FlipMove>\n            {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n                <Post\n                    key={id}\n                    name={name}\n                    description={description}\n                    message={message}\n                    photoUrl={photoUrl}\n                    />\n            ))}\n            </FlipMove>\n        </div>\n    )\n}\n\nexport default Feed\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../redux/userSlice'\nimport { auth } from '../firebase'\nimport '../styles/Login.css'\n\nfunction Login() {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [profilePic, setProfilePic] = useState(\"\")\n    const dispatch = useDispatch()\n    const loginToApp = (e) => {\n        e.preventDefault()\n        auth.signInWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            dispatch(login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: userAuth.user.displayName,\n                photoURL: userAuth.user.photoURL\n            }))\n        })\n        .catch((err) => alert(err.message))\n    }\n    const register = () => {\n        if (!name) {\n            return alert(\"You must enter a full name!\")\n        }\n\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            userAuth.user.updateProfile({\n                displayName: name,\n                photoURL: profilePic\n            })\n            .then(() => {\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoURL: profilePic\n                }))\n            })\n        }).catch((err) => alert(err.message))\n    }\n    return (\n        <div className=\"login\">\n            <img src=\"https://logos-world.net/wp-content/uploads/2020/04/Linkedin-Logo-700x394.png\" alt=\"\" />\n            <form>\n                <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Full Name (required if registering)\" type=\"text\"/>\n                <input value={profilePic} onChange={e => setProfilePic(e.target.value)} placeholder=\"Profile Pic URL (optional)\" type=\"text\"/>\n                <input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" type=\"text\"/>\n                <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" type=\"password\"/>\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\n            </form>\n            <p>Not a member?{\" \"}\n                <span className=\"login__register\" onClick={register}>Register Now</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport \"../styles/Widgets.css\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\n\nfunction Widgets() {\n    const newsArticle = (heading, subtitle) => (\n        <div className=\"widgets__article\">\n            <div className=\"widgets__articleLeft\">\n                <FiberManualRecordIcon/>\n            </div>\n            <div className=\"widgets__articleRight\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className=\"widgets\">\n            <div className=\"widgets__header\">\n                <h2>LinkedIn News</h2>\n                <InfoIcon/>\n            </div>\n            {newsArticle(\"Congress says no money for Americans\", \"Still a bad idea says Mitch McConnell\")}\n            {newsArticle(\"Running low on toilet paper?\", \"Experts say buy more GO NOW!\")}\n            {newsArticle(\"Monolith in desert flies away\", \"No joke\")}\n        </div>\n    )\n}\n\nexport default Widgets\n","import React, { useEffect } from 'react';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Feed from './components/Feed';\nimport Login from './components/Login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './redux/userSlice';\nimport { auth } from './firebase';\nimport Widgets from './components/Widgets';\n\n\nfunction App() {\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        // User is logged in.\n        dispatch(\n          login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL\n        }))\n      }\n      else {\n        // User is logged out.\n        dispatch(logout())\n      }\n    })\n  }, [])\n  \n  return (\n    <div className=\"app\">\n    {/* header */}\n    <Header />\n\n    {/* app body */}\n    {!user ? (\n      <Login/>\n    ) : (\n      <div className=\"app__body\">\n        <Sidebar/>\n        <Feed/>\n        <Widgets/>\n      </div>\n    )}\n  </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}